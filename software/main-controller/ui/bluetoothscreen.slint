import { SelectButton, Logo, Screens, Palette} from "./common.slint";



export global Bluetooth := {
    property<int> state : disconnected;

    property <int> disconnected : 0;
    property <int> connecting : 1;
    property <int> connected : 2;
    
  
}


export  BluetoothScreen := HorizontalLayout {
        
    padding: 5px;
    VerticalLayout {
        spacing:10px;
        SelectButton { text: "Previous"; image: @image-url("../images/skip_previous_black_24dp.svg"); }
        SelectButton { }
        SelectButton { }
        SelectButton { }
    }

   
    
    GridLayout { 
        Row {
            Rectangle {  }
            Rectangle {  }
            Rectangle {  }
            }
        Row {
            Rectangle {  }
            Image {
                //source: @image-url("../images/bluetooth_audio_black_24dp.svg");
                //colorize: Bluetooth.state == Bluetooth.connecting ? orange : Palette.highlight-color;
                width: source.width * 4 * 1px;
                colorize: Palette.highlight-color;

                states [
                    disconnected when Bluetooth.state == Bluetooth.disconnected : {
                        source: @image-url("../images/bluetooth_disabled_black_24dp.svg");
                    }
                    connecting when Bluetooth.state == Bluetooth.connecting : {
                        source: @image-url("../images/bluetooth_searching_black_24dp.svg");
                    }
                    connected when Bluetooth.state == Bluetooth.connected : {
                        source: @image-url("../images/bluetooth_connected_black_24dp.svg");
                    }
                
                
                ]

            }
            
            Rectangle {  }
        }
        Row {
            Rectangle {  }
            Rectangle {  }
            // Text {
            //     color: Palette.highlight-color;
            //     states [
            //         disconnected when Bluetooth.state == Bluetooth.disconnected : {
            //             text: "Disconnected";
            //         }
            //         connecting when Bluetooth.state == Bluetooth.connecting : {
            //             text: "Connecting ...";
            //         }
            //         connected when Bluetooth.state == Bluetooth.connected : {
            //             text: "Connected";
            //         }
                
                
            //     ]
            // }
            Rectangle {  }
        }
        
    }
   
    
    
    
    VerticalLayout {
        spacing: 10px;
        //padding: 5px;
        SelectButton { text: "Next"; image: @image-url("../images/skip_next_black_24dp.svg"); reversed-order: true;}
        SelectButton {}
        SelectButton { }
        SelectButton { text: "Back"; image:@image-url("../images/keyboard_return_black_24dp.svg"); reversed-order: true; }
        // Following go into the "More ..." screen
        //SelectButton { text: "TOSLINK"; reversed-order: true;}
        //SelectButton { text: "Aux In"; reversed-order: true;}
    }

    
}