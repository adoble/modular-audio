[package]
edition = "2021"
name = "main-controller"
version = "0.1.0"

[dependencies]
cortex-m = "0.7"
cortex-m-rt = "0.7"
embedded-hal = { version = "0.2.7", features = ["unproven"] }

defmt = "0.3"
defmt-rtt = "0.3"
panic-probe = { version = "0.3", features = ["print-defmt"] }

# The main controller using the Raspberry PI Pico as processor board
rp-pico = "0.6.0"

# If you're not going to use a Board Support Package you'll need these:
# rp2040-hal = { version="0.6", features=["rt"] }
# rp2040-boot2 = "0.2"

# For linking
rp2040-boot2 = { version = "0.2.1" }

# Required for RTIC
cortex-m-rtic = "1.1.4"
#rp2040-monotonic = "1.2.0"
rp2040-monotonic = "1.2"

# The pin expander used for the source display controller
mcp23017 = "1.0.0"

# Time handling traits
fugit = "0.3.6"

# The internal libraries used in the modular-audio project 
source_select_driver = { path = "source_select_driver" }
i2s-multiplexer = { path = "i2s-multiplexer" }


# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
